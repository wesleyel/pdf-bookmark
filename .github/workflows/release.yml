name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write      # create GitHub releases
  id-token: write      # OIDC for PyPI Trusted Publisher

jobs:
  build:
    name: Build sdist/wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: astral-sh/setup-uv@v3
      - name: Install deps
        run: |
          uv sync --all-extras --dev
      - name: Run tests
        run: |
          uv run pytest -q
      - name: Build dist
        run: |
          uv build
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  package-binaries:
    name: Package CLI/GUI binaries
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            py: '3.11'
          - os: macos-latest
            py: '3.11'
          - os: windows-latest
            py: '3.11'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - uses: astral-sh/setup-uv@v3
      - name: Install build deps
        run: |
          uv pip install --system pyinstaller
          uv sync --all-extras
      - name: Build CLI
        shell: bash
        run: |
          pyinstaller -F -n tocsmith tocsmith/cli.py
      - name: Build GUI
        shell: bash
        run: |
          pyinstaller -F -n tocsmith-gui tocsmith/gui.py
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-binaries
          path: |
            dist/tocsmith*

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tocsmith
    steps:
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages: dist/*
          # If you prefer legacy token auth, set PYPI_API_TOKEN in repo secrets and uncomment:
          # password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

  github-release:
    name: Create GitHub Release
    needs: [build, package-binaries]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Download Linux binaries
        uses: actions/download-artifact@v4
        with:
          name: Linux-binaries
          path: binaries/Linux
      - name: Download macOS binaries
        uses: actions/download-artifact@v4
        with:
          name: macOS-binaries
          path: binaries/macOS
      - name: Download Windows binaries
        uses: actions/download-artifact@v4
        with:
          name: Windows-binaries
          path: binaries/Windows
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            binaries/**
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}

